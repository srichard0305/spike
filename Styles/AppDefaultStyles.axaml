<Styles xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Design.PreviewWith>
         <!-- Add Controls for Previewer Here -->
        <StackPanel Orientation="Vertical">
            <Border Padding="20">
            <Button Classes="bookappointment" HorizontalAlignment="Stretch">
                <StackPanel Orientation="Horizontal">
                    <Label Classes="SideBar" FontFamily="{DynamicResource Phosphor}" Content="&#xe2c4;"></Label>
                    <Label Content="Home"></Label>
                </StackPanel>
            </Button>
        </Border>
            <Border Padding="20">
                <Button Classes="sidebar">
                    <StackPanel Orientation="Horizontal">
                        <Label Classes="SideBar" FontFamily="{DynamicResource Phosphor}" Content="&#xe2c4;"></Label>
                        <Label Content="Home"></Label>
                    </StackPanel>
                </Button>
            </Border>
            <Border Padding="20">
                <Button Classes="SecondaryButtons">
                    <StackPanel Orientation="Horizontal">
                        <Label Classes="SideBar" FontFamily="{DynamicResource Phosphor}" Content="&#xe2c4;"></Label>
                        <Label Content="Home"></Label>
                    </StackPanel>
                </Button>
            </Border>
            
            <TextBox></TextBox>
        </StackPanel>
    </Design.PreviewWith>

    <!-- Add Styles Here -->
    <Style Selector="Window">
        <Setter Property="FontFamily" Value="{DynamicResource Raleway-Regular}"></Setter>
    </Style>
    
    
    <!-- Button Styles -->
    
    <Style Selector=":is(Button)">
        <Setter Property="FontSize" Value="20"></Setter>
        <Setter Property="CornerRadius" Value="20"></Setter>
    </Style>
    
    <Style Selector=":is(Button) Label">
        <Setter Property="RenderTransform" Value="scale(1)"></Setter>
    </Style>
    
    <Style Selector=":is(Button):pointerover Label">
        <Setter Property="RenderTransform" Value="scale(1.1)"></Setter>
    </Style>
    
    <Style Selector=":is(Button) /template/ ContentPresenter">
        <Setter Property="RenderTransform" Value="scale(1)"></Setter>
        <Setter Property="Transitions">
            <Transitions>
                <BrushTransition Property="Foreground" Duration="0:0:0.1"></BrushTransition>
                <BrushTransition Property="Background" Duration="0:0:0.1"></BrushTransition>
                <TransformOperationsTransition Property="RenderTransform" Duration="0:0:0.1"></TransformOperationsTransition>
            </Transitions>
        </Setter>
    </Style>
    
    <Style Selector=":is(TextBox):pointerover /template/ ContentPresenter">
        <Setter Property="RenderTransform" Value="scale(1)"></Setter>
        <Setter Property="Transitions">
            <Transitions>
                <BrushTransition Property="Foreground" Duration="0:0:0.1"></BrushTransition>
                <BrushTransition Property="Background" Duration="0:0:0.1"></BrushTransition>
                <TransformOperationsTransition Property="RenderTransform" Duration="0:0:0.1"></TransformOperationsTransition>
            </Transitions>
        </Setter>
    </Style>
    
    <!-- sidebar buttons -->
    
    <Style Selector="Label.SideBar">
        <Setter Property="FontFamily" Value="{DynamicResource Phosphor}"></Setter>
        <Setter Property="Margin" Value="0  1.4 5 0"></Setter>
    </Style>
    
    <Style Selector=":is(Button).sidebar"> 
        <Setter Property="Foreground" Value="{DynamicResource PrimaryText}"></Setter>
        <Setter Property="Background" Value="{DynamicResource PrimaryBackground}"></Setter>
    </Style>
    
    <Style Selector=":is(Button).sidebar:pointerover /template/ ContentPresenter">
        <Setter Property="Foreground" Value="{DynamicResource SidebarPrimaryHoverText}"></Setter>
        <Setter Property="Background" Value="{DynamicResource SidebarPrimaryHover}"></Setter>
    </Style>
    
    <Style Selector=":is(Button).sidebar.active /template/ ContentPresenter">
        <Setter Property="Background" Value="{DynamicResource PrimaryActiveBackground}"></Setter>
    </Style>
    
    <!-- book appointment button -->
    
    <Style Selector=":is(Button).bookappointment"> 
        <Setter Property="Foreground" Value="{DynamicResource PrimaryText}"></Setter>
        <Setter Property="Background" Value="{DynamicResource PrimaryBackground}"></Setter>
    </Style>
    
    <Style Selector=":is(Button).bookappointment:pointerover Label">
        <Setter Property="RenderTransform" Value="scale(1.1)"></Setter>
    </Style>
    
    <Style Selector=":is(Button).bookappointment:pointerover /template/ ContentPresenter">
        <Setter Property="Foreground" Value="{DynamicResource BookAppointmentPrimaryHoverText}"></Setter>
        <Setter Property="Background" Value="{DynamicResource BookAppointmentPrimaryHover}"></Setter>
    </Style>
    
    <!-- Secondary button -->
    
    <Style Selector=":is(Button).SecondaryButtons"> 
        <Setter Property="Foreground" Value="{DynamicResource PrimaryText}"></Setter>
        <Setter Property="Background" Value="{DynamicResource PrimaryBackground}"></Setter>
    </Style>
    
    <Style Selector=":is(Button).SecondaryButtons:pointerover Label">
        <Setter Property="RenderTransform" Value="scale(1.1)"></Setter>
    </Style>
    
    <Style Selector=":is(Button).SecondaryButtons:pointerover /template/ ContentPresenter">
        <Setter Property="Foreground" Value="{DynamicResource SecondaryButtonPrimaryHoverText}"></Setter>
        <Setter Property="Background" Value="{DynamicResource SecondaryButtonPrimaryHover}"></Setter>
    </Style>
    
    <!-- Check box -->
    <Style Selector=":is(Button).AppointmentButton"> 
        <Setter Property="Foreground" Value="{DynamicResource PrimaryText}"></Setter>
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="Padding" Value="0"></Setter>
    </Style>
    
    <Style Selector=":is(Button).AppointmentButton:pointerover Label">
        <Setter Property="RenderTransform" Value="scale(1)"></Setter>
    </Style>
    
    <Style Selector=":is(Button).AppointmentButton:pointerover /template/ ContentPresenter">
        <Setter Property="Foreground" Value="{DynamicResource SecondaryButtonPrimaryHoverText}"></Setter>
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="Padding" Value="0"></Setter>
    </Style>
   
  
</Styles>

